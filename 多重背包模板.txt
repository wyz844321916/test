/*
多重背包模板，稍微改动可以变成01背包和完全背包模板，已经使用2进制优化
*/
#include<iostream>
#include<cstdio>
#include<string>
#include<string.h>
#include<cmath>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>
#include<vector>

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
const int maxn=100005;
const int inf=0x3f3f3f3f;
const double eps=1e-6;
int n,w;
ll dp[50005];
int value[105];
int weight[105];
int cnt[105];
void zeroone_pack(int i,int k)
{
        for(int j=w;j>=k*weight[i];j--)
                dp[j]=max(dp[j],dp[j-k*weight[i]]+k*value[i]);
}
void complete_pack(int i)
{
        for(int j=weight[i];j<=w;j++)
                dp[j]=max(dp[j],dp[j-weight[i]]+value[i]);
}
int multi_pack()
{
        memset(dp,0,sizeof(dp));
        for(int i=1;i<=n;i++)
        {
                if(weight[i]*cnt[i]>w)
                {
                        complete_pack(i);
                }
                else
                {
                        int k=1;
                        while(k<cnt[i])
                        {
                                zeroone_pack(i,k);
                                cnt[i]-=k;
                                k<<=1;
                        }
                        zeroone_pack(i,cnt[i]);
                }
        }
        return dp[w];
}
int main()
{
        scanf("%d%d",&n,&w);
        for(int i=1;i<=n;i++)
        {
                scanf("%d%d%d",&weight[i],&value[i],&cnt[i]);
        }
        printf("%d\n",multi_pack());
        //for(int i=0;i<=w;i++)
        //        cout<<dp[i]<<endl;
        return 0;
}
